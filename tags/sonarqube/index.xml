<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sonarqube on 青云卷</title>
    <link>https://mydream.ink/tags/sonarqube/</link>
    <description>Recent content in sonarqube on 青云卷</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 09 Nov 2019 08:32:31 +0800</lastBuildDate><atom:link href="https://mydream.ink/tags/sonarqube/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>自动化运维之自动构建</title>
      <link>https://mydream.ink/posts/devops/sonarqube-and-gitlab/</link>
      <pubDate>Sat, 09 Nov 2019 08:32:31 +0800</pubDate>
      
      <guid>https://mydream.ink/posts/devops/sonarqube-and-gitlab/</guid>
      <description>版本说明  gitlab: 11.4.5 sonarqube: 8.0-community-beta helm: v3.0.0-rc.2 sonar-gitlab-plugin: 4.1.0-SNAPSHOT chart: 3.2.2  预处理  可用的 ingress controller 域名：确保对应的域名sonar.example.com 能够访问到 ingress 已经有 gitlab，并且配置好了一个全局可用的 Kubernetes 环境的 runner  安装 sonarqube 没有已经存在的数据库用于相关数据存取，所以在安装 sonarqube 的同时，还将根据依赖安装 postgresql。
自定义变量 进入stable/sonarqube，创建 custom.yaml 文件：
image: tag: 8.0-community-beta ingress: enabled: true hosts: - name: sonar.example.com annotations: kubernetes.io/ingress.class: nginx # 选择指定的 ingress controller cert-manager.io/cluster-issuer: letsencrypt-stagging # 使用提前创建好的可用的 Issue/ClusterIssue acme.cert-manager.io/http01-edit-in-place: &amp;#34;true&amp;#34; # 颁发证书时依托原原有的 ingress 而不新建 tls: - hosts: - sonar.example.com secretName: sonar-tls persistence: enabled: true accessMode: ReadWriteOnce size: 10Gi plugins: install: # 预装 sonar-gitlab-plugin 插件 - &amp;#34;https://github.</description>
    </item>
    
  </channel>
</rss>
