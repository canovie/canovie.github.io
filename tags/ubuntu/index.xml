<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntu on 青云卷</title>
    <link>https://mydream.ink/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on 青云卷</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 07 Jul 2019 08:02:31 +0800</lastBuildDate><atom:link href="https://mydream.ink/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LXC的简单用法</title>
      <link>https://mydream.ink/archive/the-simple-usage-of-lxc/</link>
      <pubDate>Sun, 07 Jul 2019 08:02:31 +0800</pubDate>
      
      <guid>https://mydream.ink/archive/the-simple-usage-of-lxc/</guid>
      <description>LXC简介 LXC (Linux Containters) 是一种基于内核容器属性的用户空间接口。 它被认为介于chroot和完全虚拟化之间，其目标为创建一个不需要独立内核，但近可能接近标准Linux安装的环境。
其特性如下：
 内核空间（ipc, uts, mount, pid, network和user) 支持Apparmor和SELinux seccomp策略 chroots (使用pivot_root) Kernel capabilities 支持cgroups (Control groups) 由于没有完全虚拟化CPU，也没有虚拟化硬盘，其性能是与物理机接近的。实际经验，我发现在LXC中编译C/C++源码（如构建基于C/C++源码的RPM或DEB）的性能是VirtualBox的3倍。强烈建议使用LXC代替KVM和VirtualBox作为RPM或DEB的构建环境。  以下操作基于Ubuntu 12.04，那么需要安装LXC包：
sudo apt-get install -y lxc  创建LXC 以创建一个名为precise的Ubuntu 12.04容器为例。
需要创建一个基础的配置文件。由于创建LXC完成后，不再需要该配置文件（可以删除），故该文件的名字和路径没有特殊要求。这里命名为precise.conf，放在当前路径下：
lxc.network.type = veth lxc.network.flags = up lxc.network.name = eth0 lxc.network.link = lxcbr0  lxcbr0为由LXC包创建的虚拟网桥，通过ifconfig可以知道其IP地址10.0.3.1，网段10.0.3.1/24，容器将通过lxcbr0与外界通信。
如此，可以开始创建容器了：
sudo lxc-create -n precise -f precise.conf -t ubuntu -- -r precise   -n 指定容器名，这里为precise。
-f 指定基础配置文件，即上一步骤创建的precise.conf。
-t 指定模板名，这里必须为ubuntu（创建Ubuntu 12.</description>
    </item>
    
    <item>
      <title>Ubuntu安装 Docker 社区版</title>
      <link>https://mydream.ink/posts/cloud-native/container/install-docker-on-ubuntu/</link>
      <pubDate>Sun, 22 Oct 2017 08:54:08 +0800</pubDate>
      
      <guid>https://mydream.ink/posts/cloud-native/container/install-docker-on-ubuntu/</guid>
      <description>准备 系统要求 要安装Docker CE，我们需要这些64位版本的Ubuntu：
 Artful 17.10 (Docker CE 17.11 Edge and higher only) Zesty 17.04 Xenial 16.04 (LTS) Trusty 14.04 (LTS)  在Ubuntu x86_64、armhf、s390x（IBM Z）和ppc64le（IBM Power）架构上支持Docker CE。
 ppc64le和s390x限制：IBM Z和Power体系结构的软件包仅在Ubuntu Xenial及更高版本上可用。
 卸载旧版本 老版本的Docker被称为docker或者docker-engine。如果安装了这些，请将其卸载：
sudo apt-get remove docker docker-engine docker.io  如果apt-get报告没有安装这些软件包，则可以直接跳过这一步。
/var/lib/docker/的内容（包括映像，容器，卷和网络）将被保留。 Docker CE包现在称为docker-ce。
安装Docker CE 您可以根据您的需要以不同的方式安装Docker CE：
 大多数用户设置Docker的存储库并从中进行安装，以方便安装和升级任务。这是推荐的方法。 有些用户下载deb软件包手动安装，并完全手动管理升级。这很适合在诸如没有互联网访问的封闭系统上安装Docker。 在测试和开发环境中，有些用户选择使用自动便捷脚本来安装Docker。  使用软件仓库安装 首次在新的主机上安装Docker CE之前，需要设置Docker软件仓库。之后，您可以从该库安装和更新Docker。
设置软件仓库   更新apt包索引：
sudo apt-get update    安装软件包以允许apt通过HTTPS使用存储库：
sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ software-properties-common    添加Docker的官方GPG密钥：</description>
    </item>
    
  </channel>
</rss>
